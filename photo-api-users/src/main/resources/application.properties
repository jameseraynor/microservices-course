# ===================================================================
# APPLICATION PROPERTIES
# ===================================================================

# ----------------------------------------
# CORE APPLICATION SETTINGS
# ----------------------------------------
spring.application.name=user-ws
server.port=${PORT:0}

# ----------------------------------------
# SERVICE DISCOVERY (EUREKA)
# ----------------------------------------
# Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Instance Configuration
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# ----------------------------------------
# DATABASE CONFIGURATION
# ----------------------------------------
# MySQL Settings
spring.datasource.url=jdbc:mysql://localhost:3306/photo_app?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=admin123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# ----------------------------------------
# SECURITY CONFIGURATION
# ----------------------------------------
# JWT Settings
token.expiration_time=3600
token.secret=xyq8tn54mjg9mtsl20w17fmmbo6uol0wye2sjcnr7dhyyqo38z84te33eje6svl9
login.url.path=/user/login

# Gateway Configuration
gateway.ip=192.168.0.129

# ----------------------------------------
# MESSAGE BROKER (RABBITMQ)
# ----------------------------------------
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# ----------------------------------------
# RESILIENCE4J CIRCUIT BREAKER
# ----------------------------------------
# Circuit Breaker Configuration
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10

# Retry Configuration
resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-ws.max-attempts=3
resilience4j.retry.instances.albums-ws.wait-duration=2s
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5

# ----------------------------------------
# MONITORING AND ACTUATOR
# ----------------------------------------
# Endpoint Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.access=unrestricted
management.health.circuitbreakers.enabled=true

# Tracing Configuration
management.tracing.sampling.probability=1.0

# ----------------------------------------
# LOGGING CONFIGURATION
# ----------------------------------------
# Log Patterns and Levels
logging.pattern.level=%5p [${spring.application.name}, traceId=%X{traceId:-}, spanId=%X{spanId:-}]
logging.level.com.apicourse.photapp.api.users.photo_api_users.service.UserServiceImpl=DEBUG
logging.level.com.apicourse.photapp.api.users.photo_api_users.data.AlbumServiceClient=DEBUG
logging.file.name=user-ws.log

# ----------------------------------------
# DEVELOPMENT TOOLS
# ----------------------------------------
spring.devtools.restart.enabled=true

# ----------------------------------------
# ERROR HANDLING
# ----------------------------------------
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=always

# ----------------------------------------
# CONFIG SERVER
# ----------------------------------------
spring.config.import=optional:configserver:http://localhost:8888
spring.config.name=photo_app_config_server
